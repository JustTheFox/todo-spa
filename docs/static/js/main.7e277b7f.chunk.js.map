{"version":3,"sources":["components/Button/Button.jsx","components/Item/Item.jsx","store/actions.js","store/const.js","services/utils.js","layout/Header/Header.jsx","layout/Content/Content.jsx","layout/Page/Page.jsx","components/Form/Form.jsx","components/Field/Field.jsx","components/TaskForm/TaskForm.jsx","components/List/List.jsx","app.js","store/store.js","index.js"],"names":["memo","type","children","onClick","className","props","cn","Item","id","title","index","description","timestamp","done","postponed","liked","dispatch","useDispatch","onDelete","useCallback","payload","deleteTaskAction","onToggle","toggleTaskAction","onPutOff","putOffTaskAction","onLike","likeTaskAction","date","Date","year","getFullYear","month","getMonth","normalizeMonth","day","getDate","hours","getHours","minutes","getMinutes","time","parseDate","Header","Content","Page","Form","onSubmit","Field","onChange","TaskForm","initialState","useState","task","setTask","addTask","addTaskAction","target","prevState","name","value","e","preventDefault","uuid","now","placeholder","List","App","tasks","useSelector","store","shallowEqual","map","key","createStore","state","filter","copy","toggleTask","putOffTask","likeTask","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e277b7f.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport cn from 'classnames';\n\nconst Button = ({\n  type = 'submit',\n  children,\n  onClick,\n  className,\n  ...props\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={onClick}\n      className={cn('btn', 'btn-primary', className)}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default memo(Button);\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport cn from 'classnames';\nimport Button from '../Button/Button';\nimport {\n  deleteTaskAction,\n  likeTaskAction,\n  putOffTaskAction,\n  toggleTaskAction,\n} from '../../store/actions';\nimport { parseDate } from '../../services/utils';\nimport './item.scss';\n\nconst Item = ({\n  id,\n  index,\n  title,\n  description,\n  timestamp,\n  done,\n  postponed,\n  liked,\n}) => {\n  const dispatch = useDispatch();\n\n  const onDelete = useCallback(() => {\n    dispatch(deleteTaskAction(id));\n  }, [dispatch, id]);\n  const onToggle = useCallback(() => {\n    dispatch(toggleTaskAction(id));\n  }, [dispatch, id]);\n  const onPutOff = useCallback(() => {\n    dispatch(putOffTaskAction(id));\n  }, [dispatch, id]);\n  const onLike = useCallback(() => {\n    dispatch(likeTaskAction(id));\n  }, [dispatch, id]);\n\n  const { date, time } = parseDate(timestamp);\n\n  return (\n    <li className=\"item\">\n      {/*{index && <span>{index}</span>}*/}\n      <h2\n        className={cn('item__title', {\n          'item__title--done': done,\n        })}\n      >\n        {title}\n      </h2>\n      {date && time && <span className=\"item__date\">{`${date} ${time}`}</span>}\n\n      {description && <p className=\"item__description\">{description}</p>}\n      {postponed && <p>postponed</p>}\n      {liked && <p>liked</p>}\n      <Button type=\"button\" className=\"mr-2\" onClick={onDelete}>\n        Delete\n      </Button>\n      <Button type=\"button\" className=\"mr-2\" onClick={onToggle}>\n        Done\n      </Button>\n      <Button type=\"button\" className=\"mr-2\" onClick={onPutOff}>\n        Put off\n      </Button>\n      <Button type=\"button\" className=\"mr-2\" onClick={onLike}>\n        Like\n      </Button>\n    </li>\n  );\n};\n\nexport default Item;\n","import {\n  ADD_TASK,\n  DELETE_TASK,\n  TOGGLE_TASK,\n  PUT_OFF_TASK,\n  LIKE_TASK,\n} from './const';\n\nexport const addTaskAction = (task) => ({\n  type: ADD_TASK,\n  payload: task,\n});\n\nexport const deleteTaskAction = (id) => ({\n  type: DELETE_TASK,\n  payload: id,\n});\n\nexport const toggleTaskAction = (id) => ({\n  type: TOGGLE_TASK,\n  payload: id,\n});\n\nexport const putOffTaskAction = (id) => ({\n  type: PUT_OFF_TASK,\n  payload: id,\n});\n\nexport const likeTaskAction = (id) => ({\n  type: LIKE_TASK,\n  payload: id,\n});\n","export const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const TOGGLE_TASK = 'TOGGLE_TASK';\nexport const PUT_OFF_TASK = 'PUT_OFF_TASK';\nexport const LIKE_TASK = 'LIKE_TASK';\n","export const parseDate = (timestamp) => {\n  const date = new Date(timestamp);\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const normalizeMonth = month < 10 ? `0${month}` : month;\n  const day = date.getDate();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  return {\n    date: `${day}-${normalizeMonth}-${year}`,\n    time: `${hours}:${minutes}`,\n  };\n};","import React from 'react';\nimport './header.scss';\n\nconst Header = ({ children }) => {\n  return <header className=\"header\">{children}</header>;\n};\n\nexport default Header;\n","import React from 'react';\nimport './content.scss';\n\nconst Content = ({ children }) => {\n  return <main className=\"content\">{children}</main>;\n};\n\nexport default Content;\n","import React from 'react';\nimport Header from '../Header/Header';\nimport Content from '../Content/Content';\n\nconst Page = ({ children }) => {\n  return (\n    <>\n      <Header>\n        <h2>Todo App</h2>\n      </Header>\n      <Content>{children}</Content>\n    </>\n  );\n};\n\nexport default Page;\n","import React from 'react';\nimport './form.scss';\n\nconst Form = ({ children, onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit} className=\"form\">\n      {children}\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport './field.scss';\n\nconst Field = ({ onChange, ...props }) => {\n  return (\n    <div className=\"field\">\n      <input\n        className=\"form-control field__input\"\n        onChange={onChange}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default Field;\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport uuid from 'uuid/v4';\nimport Form from '../Form/Form';\nimport Field from '../Field/Field';\nimport Button from '../Button/Button';\nimport { addTaskAction } from '../../store/actions';\nimport './task-form.scss';\n\nconst TaskForm = () => {\n  const initialState = {\n    id: null,\n    date: null,\n    title: '',\n    description: '',\n    done: false,\n    postponed: false,\n    liked: false,\n  };\n  const [task, setTask] = useState(initialState);\n  const dispatch = useDispatch();\n\n  const addTask = useCallback(\n    (task) => {\n      dispatch(addTaskAction(task));\n    },\n    [dispatch],\n  );\n\n  const onChange = ({ target }) => {\n    setTask((prevState) => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addTask({\n      ...task,\n      id: uuid(),\n      date: Date.now(),\n    });\n    setTask(initialState);\n  };\n\n  return (\n    <div className=\"task-form\">\n      <Form onSubmit={onSubmit}>\n        <Field\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Заголовок\"\n          value={task.title}\n          onChange={onChange}\n        />\n        <Field\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Описание\"\n          value={task.description}\n          onChange={onChange}\n        />\n        <Button className=\"mt-3\">Add</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default TaskForm;\n","import React from 'react';\nimport './list.scss';\n\nconst List = ({ children }) => {\n  return <ul className=\"list\">{children}</ul>;\n};\n\nexport default List;\n","import React from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport Item from './components/Item/Item';\nimport Page from './layout/Page/Page';\nimport TaskForm from './components/TaskForm/TaskForm';\nimport List from './components/List/List';\n\nconst App = () => {\n  const tasks = useSelector((store) => store.tasks, shallowEqual);\n\n  return (\n    <Page>\n      <TaskForm />\n      <List>\n        {tasks.map(({ id, ...props }) => (\n          <Item key={id} id={id} {...props} />\n        ))}\n      </List>\n    </Page>\n  );\n};\n\nexport default App;\n","import {createStore} from 'redux';\nimport {ADD_TASK, DELETE_TASK, TOGGLE_TASK, PUT_OFF_TASK, LIKE_TASK} from './const.js';\nimport uuid from 'uuid/v4';\n\nconst initialState =\n    {tasks: [\n        {\n            id: uuid(),\n            title: 'Create App',\n            description: 'Cоздаем первое SPA :)',\n            timestamp: 1587228097274,\n            done: false,\n            postponed: false,\n            liked: false\n        },\n        {\n            id: uuid(),\n            title: 'Что нужно сделать',\n            description: 'Возможность создавать список; Поиск по заголовкам;',\n            timestamp: 1587228097274,\n            done: false,\n            postponed: false,\n            liked: true\n        }\n    ]}\n;\n\nconst toggleTask = (state, payload) => {\n  const copy = state.tasks.map((task) => {\n    const { id, done } = task;\n    if (id === payload ) {\n      return {\n        ...task,\n        done: !done,\n      }\n    } return task;\n  });\n  return {\n    ...state,\n    tasks: copy\n  }\n};\n\nconst putOffTask = (state, payload) => {\n  const copy = state.tasks.map((task) => {\n    const { id, postponed } = task;\n    if (id === payload ) {\n      return {\n        ...task,\n        postponed: !postponed,\n      }\n    } return task;\n  });\n  return {\n    ...state,\n    tasks: copy\n  }\n};\n\nconst likeTask = (state, payload) => {\n  const copy = state.tasks.map((task) => {\n    const { id, liked } = task;\n    if (id === payload ) {\n      return {\n        ...task,\n        liked: !liked,\n      }\n    } return task;\n  });\n  return {\n    ...state,\n    tasks: copy\n  }\n};\n\nconst reducer = (state, {type, payload}) => {\n  switch (type) {\n    case ADD_TASK:\n      return {\n        ...state,\n        tasks: [\n            ...state.tasks,\n            payload\n        ]\n      };\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter(({id}) => id !== payload)\n      };\n    case TOGGLE_TASK:\n      return toggleTask(state, payload);\n    case PUT_OFF_TASK:\n          return putOffTask(state, payload);\n    case LIKE_TASK:\n       return likeTask(state, payload);\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(reducer, initialState);\n// store.subscribe(()=>{console.log(store.getState())});","import React, { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './app';\nimport { store } from './store/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\n\nrender(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}